-- Proteção contra Kick e Crash
pcall(function()
    local mt = getrawmetatable(game)
    if setreadonly then setreadonly(mt, false) end

    local antigoNamecall = mt.__namecall 
    local antigoIndex = mt.__index 
    
    mt.__namecall = newcclosure(function(self, ...) 
        local metodo = getnamecallmethod() 
        if tostring(metodo):lower() == "kick" then 
            warn("Tentativa de Kick bloqueada via __namecall") 
            return nil 
        end 
        return antigoNamecall(self, ...) 
    end) 
    
    mt.__index = newcclosure(function(self, chave) 
        if tostring(chave):lower() == "kick" then 
            warn("Tentativa de Kick bloqueada via __index") 
            return function() end 
        end 
        return antigoIndex(self, chave) 
    end) 
    
    local jogador = game:GetService("Players").LocalPlayer 
    jogador.Kick = function() 
        warn("Tentativa de Kick bloqueada diretamente") 
        return nil 
    end 
    
    if setreadonly then setreadonly(mt, true) end 
end)

-- Carregamento da RedzLib
local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()

-- Janela principal
local Janela = redzlib:MakeWindow({
    Title = "Zeta Hub X Steal a brainrot",
    SubTitle = "by S I L E N T",
    SaveFolder = "ZetaHubUniversal"
})

Janela:AddMinimizeButton({
    Button = { Image = "rbxassetid://100006760882280", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(0, 6) },
})

-- Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

-- Variáveis do jogador
local LocalPlayer = Players.LocalPlayer
local character, humanoid
local localMarcado = nil
local localBaseMarcado = nil

-- Atualiza referências
local function atualizarReferencias()
    character = LocalPlayer.Character
    humanoid = character and character:FindFirstChildOfClass("Humanoid") or nil
end

LocalPlayer.CharacterAdded:Connect(atualizarReferencias)
LocalPlayer.CharacterRemoving:Connect(function()
    character = nil
    humanoid = nil
end)

atualizarReferencias()

-- Aba Discord
local AbaDiscord = Janela:MakeTab({
    Title = "Discord",
    Icon = "rbxassetid://84198990394879"
})

AbaDiscord:AddSection("Discord")

AbaDiscord:AddDiscordInvite({
    Name = "Zeta Hub",
    Description = "Entre no Discord",
    Logo = "rbxassetid://88800066762467",
    Invite = "https://discord.gg/pzrtAEDBbt"
})

-- Aba Segurança
local AbaSeguranca = Janela:MakeTab({
    Title = "Segurança",
    Icon = "rbxassetid://7072718262"
})

AbaSeguranca:AddSection("Ferramentas de Base")

-- Marcar posição de base manualmente
AbaSeguranca:AddButton({
    Title = "Marcar Local da Base",
    Description = "Salva sua posição atual como referência de base",
    Callback = function()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if hrp then
            localBaseMarcado = hrp.Position
            print("Local da base marcado em:", localBaseMarcado)
        else
            warn("HumanoidRootPart não encontrado")
        end
    end
})

-- Teleporte direto para a base marcada
AbaSeguranca:AddButton({
    Title = "Teleportar para Base Marcada",
    Description = "Teleporta instantaneamente para o local marcado da base",
    Callback = function()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if not hrp then
            warn("HumanoidRootPart não encontrado")
            return
        end

        if not localBaseMarcado then 
            warn("Nenhum local de base foi marcado") 
            return 
        end

        hrp.CFrame = CFrame.new(localBaseMarcado)
        print("Teleportado para a base marcada")
    end
})

-- Detecta base "X Side" atual e teleporta para o PlotBlock
AbaSeguranca:AddButton({
    Title = "Teleportar para sua Base (Side)",
    Description = "Teleporta para o PlotBlock da base 'X Side' que você está dentro",
    Callback = function()
        local function personagemPronto()
            return character and character:FindFirstChild("HumanoidRootPart")
        end

        if not personagemPronto() then
            repeat task.wait() until personagemPronto()
        end

        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then
            warn("HumanoidRootPart não encontrado")
            return
        end

        local ladoEncontrado = nil
        for _, base in pairs(workspace:GetChildren()) do
            if base:IsA("Model") and base.Name:match("^%d+ Side$") then
                if character:IsDescendantOf(base) then
                    ladoEncontrado = base
                    break
                end
            end
        end

        if not ladoEncontrado then
            warn("Não foi possível detectar em qual base 'Side' você está")
            return
        end

        local plotBlock = ladoEncontrado:FindFirstChild("PlotBlock", true)
        if not plotBlock or not plotBlock:IsA("BasePart") then
            warn("PlotBlock não encontrado dentro da base:", ladoEncontrado.Name)
            return
        end

        hrp.CFrame = plotBlock.CFrame + Vector3.new(0, 5, 0)
        print("Teleportado para PlotBlock da base:", ladoEncontrado.Name)
    end
})

-- Aba Principal
local AbaPrincipal = Janela:MakeTab({
    Title = "Principal",
    Icon = "rbxassetid://106319096400681"
})

AbaPrincipal:AddSection("Movimento")

-- Marcar posição personalizada
AbaPrincipal:AddButton({
    Title = "Marcar Local",
    Description = "Salva sua posição atual para teleporte",
    Callback = function()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if hrp then
            localMarcado = hrp.Position
            print("Local marcado em:", localMarcado)
        else
            warn("HumanoidRootPart não encontrado")
        end
    end
})

-- Teleporte com Tween e invencibilidade
AbaPrincipal:AddButton({
    Title = "Teleportar para Local Marcado (Tween)",
    Description = "Teleporta suavemente com proteção e atravessa paredes",
    Callback = function()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if not hrp or not humanoid then
            warn("HumanoidRootPart ou Humanoid não encontrado")
            return
        end

        if not localMarcado then
            warn("Nenhum local foi marcado")
            return
        end
        
        local vidaOriginal = humanoid.Health 
        local imune = true 
        local conexaoVida 
        conexaoVida = humanoid:GetPropertyChangedSignal("Health"):Connect(function() 
            if imune and humanoid.Health < vidaOriginal then 
                humanoid.Health = vidaOriginal 
            end 
        end) 
        
        local partesAfetadas = {} 
        for _, parte in pairs(character:GetDescendants()) do 
            if parte:IsA("BasePart") and parte.Name ~= "HumanoidRootPart" then 
                table.insert(partesAfetadas, {part = parte, transparencia = parte.Transparency, colide = parte.CanCollide}) 
                parte.Transparency = 1 
                parte.CanCollide = false 
            elseif parte:IsA("Decal") then 
                parte.Transparency = 1 
            end 
        end 
        
        local nomesParedes = {"Wall", "BaseWall", "Barrier", "Parade", "WallPart", "BaseWallPart"} 
        local paredesRemovidas = {} 
        for _, obj in pairs(workspace:GetDescendants()) do 
            if obj:IsA("BasePart") then 
                for _, nome in pairs(nomesParedes) do 
                    if obj.Name:lower():find(nome:lower()) then 
                        table.insert(paredesRemovidas, { part = obj, transparencia = obj.Transparency, colide = obj.CanCollide }) 
                        obj.Transparency = 1 
                        obj.CanCollide = false 
                    end 
                end 
            end 
        end 
        
        local distancia = (hrp.Position - localMarcado).Magnitude 
        local infoTween = TweenInfo.new(distancia / 40, Enum.EasingStyle.Linear) 
        local tween = TweenService:Create( 
            hrp, 
            infoTween, 
            {CFrame = CFrame.new(localMarcado + Vector3.new(0, 3, 0))} 
        ) 
        tween:Play() 
        
        tween.Completed:Connect(function() 
            imune = false 
            if conexaoVida then conexaoVida:Disconnect() end 
            
            for _, dados in pairs(partesAfetadas) do 
                if dados.part then 
                    dados.part.Transparency = dados.transparencia 
                    dados.part.CanCollide = dados.colide 
                end 
            end
            
            for _, dados in pairs(paredesRemovidas) do 
                if dados.part then 
                    dados.part.Transparency = dados.transparencia 
                    dados.part.CanCollide = dados.colide 
                end 
            end
        end)
    end
})
