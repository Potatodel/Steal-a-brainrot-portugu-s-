-- Restri√ß√£o: S√≥ funciona no jogo "Steal a Brainrot"
if game.PlaceId ~= 109983668079237 then
    game:GetService("Players").LocalPlayer:Kick("Por favor, entre no jogo Steal a Brainrot")
    return
end

-- Sistema Anti-Kick e Anti-Crash
pcall(function()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local mt = getrawmetatable(game)
    local gameShuttingDown = false

    game:BindToClose(function() gameShuttingDown = true end)
    
    if setreadonly then setreadonly(mt, false) end
    
    local oldNamecall = mt.__namecall
    local oldIndex = mt.__index
    
    -- Previne tentativas de kick via metatable
    mt.__namecall = newcclosure(function(self, ...)
        if gameShuttingDown then return oldNamecall(self, ...) end
        local method = getnamecallmethod()
        if typeof(method) == "string" and method:lower() == "kick" then
            warn("Tentativa de kick bloqueada via __namecall")
            return nil
        end
        return oldNamecall(self, ...)
    end)
    
    -- Bloqueia m√©todos destrutivos como kick, breakjoints, destroy
    mt.__index = newcclosure(function(self, key)
        if gameShuttingDown then return oldIndex(self, key) end
        if typeof(key) == "string" then
            local lowered = key:lower()
            if lowered == "kick" then
                warn("Tentativa de kick bloqueada via __index")
                return function() end
            elseif (lowered == "breakjoints" or lowered == "destroy") then
                warn("M√©todo destrutivo '" .. key .. "' bloqueado via __index")
                return function() end
            end
        end
        return oldIndex(self, key)
    end)
    
    -- Sobrescreve o m√©todo de kick do jogador
    if LocalPlayer then
        local originalKick = LocalPlayer.Kick
        LocalPlayer.Kick = function(self, ...)
            if not gameShuttingDown then
                warn("Tentativa de kick bloqueada via override .Kick")
                return nil
            end
            return originalKick(self, ...)
        end
    end
    
    -- Sistema de prote√ß√£o do personagem
    local function protectCharacter(char)
        if not char then return end
        
        -- Previne destrui√ß√£o de partes
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                local originalDestroy = part.Destroy
                part.Destroy = function(self, ...)
                    if not gameShuttingDown then
                        warn("Tentativa de destruir parte do personagem: " .. part.Name)
                        return nil
                    end
                    return originalDestroy(self, ...)
                end
            end
        end
        
        -- Previne ragdoll ao morrer
        local hum = char:FindFirstChildWhichIsA("Humanoid")
        if hum then
            hum.BreakJointsOnDeath = false
        end
    end
    
    -- Aplica prote√ß√£o ao personagem atual e futuros
    if LocalPlayer.Character then
        protectCharacter(LocalPlayer.Character)
    end
    
    LocalPlayer.CharacterAdded:Connect(protectCharacter)
    
    if setreadonly then setreadonly(mt, true) end
end)

-- Carrega a biblioteca de interface RedzLib
local success, redzlib = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()
end)

if not success then
    warn("Falha ao carregar RedzLib:", redzlib)
    return
end

-- Cria a janela principal
local Window = redzlib:MakeWindow({
    Title = "Zeta Hub X Steal a Brainrot",
    SubTitle = "por SILENT",
    SaveFolder = "ZetaHubUniversal"
})

-- Adiciona bot√£o de minimizar
Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://100006760882280", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(0, 6) },
})

-- Servi√ßos do jogo
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

-- Refer√™ncias do jogador
local LocalPlayer = Players.LocalPlayer
local character, humanoid
local markedLocation = nil
local baseBlockLocation = nil

-- Sistema de detec√ß√£o de Brainrot
local brainrotNotificationEnabled = false
local brainrotConnection
local knownBrainrots = {}

-- Atualiza refer√™ncias do personagem
local function updateReferences()
    character = LocalPlayer.Character
    humanoid = character and character:FindFirstChildOfClass("Humanoid") or nil
end

-- Configura rastreamento de personagem
LocalPlayer.CharacterAdded:Connect(updateReferences)
LocalPlayer.CharacterRemoving:Connect(function()
    character = nil
    humanoid = nil
end)

updateReferences()

-- Sistema de notifica√ß√£o
local function sendNotification(title, text, duration)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = duration or 5
        })
    end)
end

-- Aba Discord
local TabDiscord = Window:MakeTab({ Title = "Discord", Icon = "rbxassetid://84198990394879" })
TabDiscord:AddSection("Discord")
TabDiscord:AddDiscordInvite({
    Name = "Zeta Hub",
    Description = "Junte-se √† comunidade",
    Logo = "rbxassetid://88800066762467",
    Invite = "https://discord.gg/pzrtAEDBbt"
})

-- Aba Seguran√ßa
local TabSecurity = Window:MakeTab({ Title = "Seguran√ßa", Icon = "rbxassetid://139126357881607" })
TabSecurity:AddSection("Ferramentas de Base")

-- Marca localiza√ß√£o do bloco base
TabSecurity:AddButton({
    Title = "Marcar Localiza√ß√£o do Bloco Base",
    Description = "Salva sua posi√ß√£o atual como refer√™ncia",
    Callback = function()
        updateReferences()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if hrp then
            baseBlockLocation = hrp.Position
            print("Localiza√ß√£o do bloco base marcada em:", baseBlockLocation)
        else
            warn("HumanoidRootPart n√£o encontrado")
        end
    end
})

-- Teleporta para o bloco base salvo
TabSecurity:AddButton({
    Title = "Teleportar para Bloco Base",
    Description = "Teleporta para a localiza√ß√£o salva do bloco base",
    Callback = function()
        updateReferences()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if hrp and baseBlockLocation then
            hrp.CFrame = CFrame.new(baseBlockLocation)
            print("Teleportado para bloco base")
        else
            warn("HumanoidRootPart ausente ou localiza√ß√£o n√£o marcada")
        end
    end
})

-- Teleporta para sua base atual
TabSecurity:AddButton({
    Title = "Teleportar para Sua Base",
    Description = "Teleporta para o PlotBlock da base atual",
    Callback = function()
        updateReferences()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        local sideModel = nil
        for _, base in pairs(workspace:GetChildren()) do
            if base:IsA("Model") and base.Name:match("^%d+ Side$") then
                if character:IsDescendantOf(base) then
                    sideModel = base
                    break
                end
            end
        end
        
        if sideModel then
            local plot = sideModel:FindFirstChild("PlotBlock", true)
            if plot then
                hrp.CFrame = plot.CFrame + Vector3.new(0, 5, 0)
                print("Teleportado para PlotBlock:", sideModel.Name)
            else
                warn("PlotBlock n√£o encontrado em", sideModel.Name)
            end
        else
            warn("Nenhuma base detectada")
        end
    end
})

-- Aba Farm de Sub
local TabSubFarming = Window:MakeTab({ Title = "Farm de Sub", Icon = "rbxassetid://103306413269388" })
TabSubFarming:AddSection("Detec√ß√£o de Brainrot")

-- Sistema de detec√ß√£o de Brainrot
local function checkForBrainrots()
    if not brainrotNotificationEnabled then return end
    
    -- Procura por itens Brainrot no workspace
    for _, item in pairs(workspace:GetDescendants()) do
        if item:IsA("Model") or item:IsA("Part") then
            local itemName = item.Name:lower()
            -- Termos comuns de Brainrot
            if itemName:find("brainrot") or itemName:find("skibidi") or itemName:find("sigma") or 
               itemName:find("rizz") or itemName:find("ohio") or itemName:find("gyatt") or
               itemName:find("fanum") or itemName:find("tax") then
                
                local itemId = tostring(item)
                if not knownBrainrots[itemId] then
                    knownBrainrots[itemId] = true
                    sendNotification("üß† Brainrot Detectado!", "Novo brainrot encontrado: " .. item.Name, 10)
                    warn("Brainrot detectado:", item.Name, "em", item:GetPivot().Position)
                end
            end
        end
    end
    
    -- Verifica ReplicatedStorage por itens na loja
    pcall(function()
        for _, item in pairs(ReplicatedStorage:GetDescendants()) do
            if item:IsA("Model") or item:IsA("StringValue") or item:IsA("Part") then
                local itemName = item.Name:lower()
                if itemName:find("brainrot") or itemName:find("skibidi") or itemName:find("sigma") or 
                   itemName:find("rizz") or itemName:find("ohio") or itemName:find("gyatt") or
                   itemName:find("fanum") or itemName:find("tax") then
                    
                    local itemId = tostring(item)
                    if not knownBrainrots[itemId] then
                        knownBrainrots[itemId] = true
                        sendNotification("üß† Brainrot Dispon√≠vel!", "Item na loja: " .. item.Name, 10)
                        warn("Brainrot dispon√≠vel na loja:", item.Name)
                    end
                end
            end
        end
    end)
end

-- Alternador de notifica√ß√µes de Brainrot
TabSubFarming:AddToggle({
    Title = "Notifica√ß√µes de Brainrot",
    Description = "Receba avisos quando brainrots aparecerem para compra",
    Default = false,
    Callback = function(state)
        brainrotNotificationEnabled = state
        if state then
            warn("Notifica√ß√µes de Brainrot ativadas")
            sendNotification("üß† Detector de Brainrot", "Monitorando por brainrots!", 3)
            brainrotConnection = RunService.Heartbeat:Connect(checkForBrainrots)
        else
            warn("Notifica√ß√µes de Brainrot desativadas")
            if brainrotConnection then
                brainrotConnection:Disconnect()
                brainrotConnection = nil
            end
            knownBrainrots = {} -- Reseta o cache
        end
    end
})

-- Limpa cache de Brainrot
TabSubFarming:AddButton({
    Title = "Limpar Cache de Brainrot",
    Description = "Reseta a lista de brainrots detectados",
    Callback = function()
        knownBrainrots = {}
        sendNotification("üß† Cache Limpo", "Cache de detec√ß√£o resetado", 3)
        warn("Cache de Brainrot limpo")
    end
})

TabSubFarming:AddSection("Recursos Autom√°ticos")

-- Escaneamento manual de Brainrot
TabSubFarming:AddButton({
    Title = "Escanear Brainrots Agora",
    Description = "Escaneia manualmente por brainrots dispon√≠veis",
    Callback = function()
        checkForBrainrots()
        sendNotification("üß† Escaneamento Completo", "Escaneamento manual conclu√≠do", 3)
    end
})

-- Aba Principal
local TabMain = Window:MakeTab({ Title = "Principal", Icon = "rbxassetid://106319096400681" })
TabMain:AddSection("Movimento")

-- Marca localiza√ß√£o para teleporte
TabMain:AddButton({
    Title = "Marcar Localiza√ß√£o",
    Description = "Salva sua posi√ß√£o atual para teleporte",
    Callback = function()
        updateReferences()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if hrp then
            markedLocation = hrp.Position
            print("Localiza√ß√£o marcada em:", markedLocation)
        else
            warn("HumanoidRootPart n√£o encontrado")
        end
    end
})

-- Teleporte suave com imunidade a dano
TabMain:AddButton({
    Title = "Teleporte Suave para Local Marcado",
    Description = "Teleporte com passagem por paredes e imunidade a dano",
    Callback = function()
        updateReferences()
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if not hrp or not humanoid or not markedLocation then return end

        local originalHealth = humanoid.Health
        local immune = true
        
        -- Prote√ß√£o de vida durante teleporte
        local healthConn = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            if immune and humanoid.Health < originalHealth then
                humanoid.Health = originalHealth
            end
        end)
        
        -- Torna partes do personagem transparentes
        local affectedParts = {}
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                table.insert(affectedParts, { part = part, t = part.Transparency, c = part.CanCollide })
                part.Transparency = 1
                part.CanCollide = false
            elseif part:IsA("Decal") then
                part.Transparency = 1
            end
        end
        
        -- Remove colis√£o com paredes
        local removedWalls = {}
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("BasePart") and obj.Name:lower():find("wall") then
                table.insert(removedWalls, { part = obj, t = obj.Transparency, c = obj.CanCollide })
                obj.Transparency = 1
                obj.CanCollide = false
            end
        end
        
        -- Cria e executa anima√ß√£o de teleporte
        local dist = (hrp.Position - markedLocation).Magnitude
        local tweenInfo = TweenInfo.new(dist / 40, Enum.EasingStyle.Linear)
        local tween = TweenService:Create(hrp, tweenInfo, { CFrame = CFrame.new(markedLocation + Vector3.new(0, 3, 0)) })
        
        tween:Play()
        tween.Completed:Connect(function()
            immune = false
            if healthConn then healthConn:Disconnect() end
            
            -- Restaura partes do personagem
            for _, data in ipairs(affectedParts) do
                if data.part and data.part.Parent then
                    data.part.Transparency = data.t
                    data.part.CanCollide = data.c
                end
            end
            
            -- Restaura paredes
            for _, data in ipairs(removedWalls) do
                if data.part and data.part.Parent then
                    data.part.Transparency = data.t
                    data.part.CanCollide = data.c
                end
            end
        end)
    end
})

TabMain:AddSection("Teleporte A√©reo")

-- Interface de Teleporte A√©reo
local skyTeleportFrame = nil
local skyButton = nil
local skyButtonRGBConnection = nil

TabMain:AddButton({
    Title = "Painel A√©reo",
    Description = "Alterna a interface de teleporte a√©reo",
    Callback = function()
        if skyTeleportFrame then
            skyTeleportFrame.Visible = not skyTeleportFrame.Visible
        else
            -- Cria o painel de teleporte a√©reo
            skyTeleportFrame = Instance.new("Frame")
            skyTeleportFrame.Name = "SkyTeleportFrame"
            skyTeleportFrame.Size = UDim2.new(0, 150, 0, 60)
            skyTeleportFrame.Position = UDim2.new(0.5, -75, 0.5, -30)
            skyTeleportFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            skyTeleportFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            skyTeleportFrame.BackgroundTransparency = 0.7
            skyTeleportFrame.BorderSizePixel = 0
            skyTeleportFrame.Visible = true
            skyTeleportFrame.Active = true
            skyTeleportFrame.Selectable = true
            skyTeleportFrame.ZIndex = 10
            skyTeleportFrame.Parent = game:GetService("CoreGui"):FindFirstChild("RobloxGui") or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
            
            -- Cantos arredondados
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 8)
            corner.Parent = skyTeleportFrame
            
            -- Cria bot√£o de teleporte
            skyButton = Instance.new("TextButton")
            skyButton.Name = "SkyButton"
            skyButton.Size = UDim2.new(0.9, 0, 0.8, 0)
            skyButton.Position = UDim2.new(0.05, 0, 0.1, 0)
            skyButton.BackgroundTransparency = 1
            skyButton.Text = "CIMA"
            skyButton.TextSize = 18
            skyButton.Font = Enum.Font.GothamBold
            skyButton.TextColor3 = Color3.new(1, 1, 1)
            skyButton.TextStrokeTransparency = 0.5
            skyButton.TextStrokeColor3 = Color3.new(0, 0, 0)
            skyButton.ZIndex = 11
            skyButton.Parent = skyTeleportFrame
            
            -- Torna o painel arrast√°vel
            local dragging
            local dragInput
            local dragStart
            local startPos
            
            local function updateInput(input)
                local delta = input.Position - dragStart
                local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                skyTeleportFrame.Position = newPos
            end
            
            skyTeleportFrame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                    dragStart = input.Position
                    startPos = skyTeleportFrame.Position
                    
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)
            
            skyTeleportFrame.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    dragInput = input
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    updateInput(input)
                end
            end)
            
            -- Funcionalidade de teleporte
            skyButton.MouseButton1Click:Connect(function()
                updateReferences()
                local hrp = character and character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    if skyButton.Text == "CIMA" then
                        hrp.CFrame = CFrame.new(hrp.Position.X, 171, hrp.Position.Z)
                        skyButton.Text = "BAIXO"
                    else
                        hrp.CFrame = CFrame.new(hrp.Position.X, -7, hrp.Position.Z)
                        skyButton.Text = "CIMA"
                    end
                end
            end)
            
            -- Efeito RGB no texto do bot√£o
            if skyButtonRGBConnection then
                skyButtonRGBConnection:Disconnect()
            end
            
            skyButtonRGBConnection = RunService.RenderStepped:Connect(function()
                local hue = tick() % 5 / 5
                local color = Color3.fromHSV(hue, 1, 1)
                skyButton.TextColor3 = color
            end)
            
            -- Bot√£o de fechar
            local closeButton = Instance.new("TextButton")
            closeButton.Name = "CloseButton"
            closeButton.Size = UDim2.new(0, 20, 0, 20)
            closeButton.Position = UDim2.new(1, -25, 0, 5)
            closeButton.Text = "X"
            closeButton.TextColor3 = Color3.new(1, 1, 1)
            closeButton.TextSize = 14
            closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
            closeButton.BackgroundTransparency = 0.7
            closeButton.ZIndex = 11
            closeButton.Parent = skyTeleportFrame
            
            local closeCorner = Instance.new("UICorner")
            closeCorner.CornerRadius = UDim.new(0, 10)
            closeCorner.Parent = closeButton
            
            closeButton.MouseButton1Click:Connect(function()
                skyTeleportFrame.Visible = false
            end)
        end
    end
})

-- Sistema Anti-Ragdoll
local antiRagdollEnabled = false
local antiRagdollConnection

TabMain:AddSection("Anti-Ragdoll")
TabMain:AddToggle({
    Title = "Anti-Ragdoll",
    Description = "Previne que seu personagem vire um ragdoll",
    Default = false,
    Callback = function(state)
        antiRagdollEnabled = state
        if state then
            warn("Anti-Ragdoll ativado")
            antiRagdollConnection = RunService.Heartbeat:Connect(function()
                updateReferences()
                if not character then return end
                
                -- Remove restri√ß√µes dos membros
                for _, limb in ipairs({"Left Arm", "Right Arm", "Left Leg", "Right Leg", "Head", "Torso", "UpperTorso", "LowerTorso"}) do
                    local part = character:FindFirstChild(limb)
                    if part then
                        for _, c in ipairs(part:GetChildren()) do
                            if c:IsA("BallSocketConstraint") or c:IsA("HingeConstraint") then
                                c:Destroy()
                            end
                        end
                    end
                end
                
                -- Mant√©m juntas ativadas
                for _, joint in ipairs(character:GetDescendants()) do
                    if joint:IsA("Motor6D") then
                        joint.Enabled = true
                    end
                end
            end)
        else
            warn("Anti-Ragdoll desativado")
            if antiRagdollConnection then
                antiRagdollConnection:Disconnect()
                antiRagdollConnection = nil
            end
        end
    end
})

-- Aba Fun√ß√µes
local TabFunctions = Window:MakeTab({ Title = "Fun√ß√µes", Icon = "rbxassetid://103306413269388" })

-- Sistema de Pulo Infinito
local infiniteJumpEnabled = false
local jumpConnection

local function handleJump()
    updateReferences()
    if humanoid and humanoid:GetState() ~= Enum.HumanoidStateType.Dead then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end

TabFunctions:AddToggle({
    Title = "Pulo Infinito",
    Description = "Permite pular infinitamente no ar",
    Default = false,
    Callback = function(state)
        infiniteJumpEnabled = state
        if state then
            warn("Pulo Infinito ativado")
            if jumpConnection then jumpConnection:Disconnect() end
            jumpConnection = UserInputService.JumpRequest:Connect(handleJump)
            
            -- Reconecta ap√≥s respawn
            LocalPlayer.CharacterAdded:Connect(function()
                updateReferences()
                if infiniteJumpEnabled then
                    if jumpConnection then jumpConnection:Disconnect() end
                    jumpConnection = UserInputService.JumpRequest:Connect(handleJump)
                end
            end)
        else
            warn("Pulo Infinito desativado")
            if jumpConnection then
                jumpConnection:Disconnect()
                jumpConnection = nil
            end
        end
    end
})

-- Sistema NoClip
local noClipEnabled = false
local noClipConnection

local function noclipLoop()
    updateReferences()
    if not character then return end
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

TabFunctions:AddToggle({
    Title = "NoClip",
    Description = "Permite atravessar paredes",
    Default = false,
    Callback = function(state)
        noClipEnabled = state
        if state then
            warn("NoClip ativado")
            noClipConnection = RunService.Stepped:Connect(noclipLoop)
        else
            warn("NoClip desativado")
            if noClipConnection then
                noClipConnection:Disconnect()
                noClipConnection = nil
            end
        end
    end
})

-- Sistema ESP (Destaque de Jogadores)
local espEnabled = false
local espFolders = {}
local espConnections = {}

local function createESP(player)
    if player == Players.LocalPlayer then return end

    local function setup()
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
        
        -- Limpa ESP existente
        if espFolders[player] then
            espFolders[player]:Destroy()
        end
        if espConnections[player] then
            for _, conn in pairs(espConnections[player]) do
                pcall(function() conn:Disconnect() end)
            end
            espConnections[player] = {}
        end
        
        -- Cria pasta ESP
        local folder = Instance.new("Folder")
        folder.Name = "ESP" .. player.Name
        folder.Parent = workspace
        espFolders[player] = folder
        
        -- Cria efeito de destaque
        local highlight = Instance.new("Highlight")
        highlight.Adornee = player.Character
        highlight.FillTransparency = 0.7
        highlight.OutlineTransparency = 0
        highlight.Parent = folder
        
        -- Cria tag com nome
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = player.Character:FindFirstChild("HumanoidRootPart")
        billboard.Size = UDim2.new(0, 200, 0, 40)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true
        billboard.MaxDistance = 1000
        billboard.Parent = folder
        
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextStrokeTransparency = 0.5
        textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        textLabel.TextSize = 14
        textLabel.Font = Enum.Font.GothamBold
        textLabel.Text = player.Name
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.Parent = billboard
        
        -- Adiciona display de vida
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local function updateText()
                textLabel.Text = string.format("%s [%d/%d]", player.Name, math.floor(humanoid.Health), math.floor(humanoid.MaxHealth))
            end
            updateText()
            
            if not espConnections[player] then
                espConnections[player] = {}
            end
            espConnections[player].healthConn = humanoid:GetPropertyChangedSignal("Health"):Connect(updateText)
        end
        
        -- Adiciona efeito RGB
        if not espConnections[player] then
            espConnections[player] = {}
        end
        espConnections[player].renderConn = RunService.RenderStepped:Connect(function()
            local hue = tick() % 5 / 5
            local color = Color3.fromHSV(hue, 1, 1)
            textLabel.TextColor3 = color
            highlight.FillColor = color
            highlight.OutlineColor = color
        end)
    end
    
    setup()
    
    -- Persiste atrav√©s de respawns
    if not espConnections[player] then
        espConnections[player] = {}
    end
    espConnections[player].charAdded = player.CharacterAdded:Connect(function()
        task.wait(0.5)
        if espEnabled then
            setup()
        end
    end)
end

-- Atualiza todos os elementos ESP
local function updateESP()
    for player, folder in pairs(espFolders) do
        if folder then folder:Destroy() end
    end
    for player, conns in pairs(espConnections) do
        for _, conn in pairs(conns) do
            pcall(function() conn:Disconnect() end)
        end
    end
    espFolders = {}
    espConnections = {}

    if espEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                createESP(player)
            end
        end
    end
end

-- ESP permanece ativo ap√≥s morte do jogador
local espPlayerAddedConnection
local espLocalPlayerRespawnConnection

TabFunctions:AddToggle({
    Title = "ESP de Jogadores",
    Description = "Destaca jogadores com RGB + nome e vida (Persistente)",
    Default = false,
    Callback = function(state)
        espEnabled = state
        if state then
            warn("ESP ativado")
            updateESP()
            
            -- Lida com novos jogadores
            if espPlayerAddedConnection then espPlayerAddedConnection:Disconnect() end
            espPlayerAddedConnection = Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function()
                    task.wait(0.5)
                    if espEnabled then
                        createESP(player)
                    end
                end)
            end)
            
            -- Lida com respawn do jogador local
            if espLocalPlayerRespawnConnection then espLocalPlayerRespawnConnection:Disconnect() end
            espLocalPlayerRespawnConnection = LocalPlayer.CharacterAdded:Connect(function()
                task.wait(1)
                if espEnabled then
                    updateESP()
                end
            end)
        else
            warn("ESP desativado")
            updateESP()
            if espPlayerAddedConnection then espPlayerAddedConnection:Disconnect() end
            if espLocalPlayerRespawnConnection then espLocalPlayerRespawnConnection:Disconnect() end
        end
    end
})

-- Sistema GodMode Avan√ßado
local godModeEnabled = false
local godModeConnection
local godModeHealthConnection

TabFunctions:AddToggle({
    Title = "GodMode",
    Description = "GodMode avan√ßado com m√∫ltiplas camadas de prote√ß√£o",
    Default = false,
    Callback = function(state)
        godModeEnabled = state
        if state then
            warn("GodMode ativado")
            
            local function setupGodMode()
                updateReferences()
                if not humanoid then return end
                
                local originalMaxHealth = humanoid.MaxHealth
                
                -- Prote√ß√£o de vida
                if godModeHealthConnection then godModeHealthConnection:Disconnect() end
                godModeHealthConnection = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                    if godModeEnabled and humanoid.Health < originalMaxHealth then
                        humanoid.Health = originalMaxHealth
                    end
                end)
                
                -- Previne estado de plataforma
                local stateConnection = humanoid:GetPropertyChangedSignal("PlatformStand"):Connect(function()
                    if godModeEnabled then
                        humanoid.PlatformStand = false
                    end
                end)
                
                -- Previne morte
                local deathConnection = humanoid.Died:Connect(function()
                    if godModeEnabled then
                        task.wait(0.1)
                        if humanoid and humanoid.Parent then
                            humanoid:ChangeState(Enum.HumanoidStateType.Running)
                            humanoid.Health = originalMaxHealth
                        end
                    end
                end)
                
                if not espConnections.godMode then
                    espConnections.godMode = {}
                end
                espConnections.godMode.health = godModeHealthConnection
                espConnections.godMode.state = stateConnection
                espConnections.godMode.death = deathConnection
            end
            
            -- Loop principal do GodMode
            godModeConnection = RunService.Heartbeat:Connect(function()
                updateReferences()
                if not character or not humanoid then return end
                
                -- Mant√©m vida cheia
                if humanoid.Health < humanoid.MaxHealth then
                    humanoid.Health = humanoid.MaxHealth
                end
                
                -- Previne estado de morte
                if humanoid:GetState() == Enum.HumanoidStateType.Dead then
                    humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    humanoid.Health = humanoid.MaxHealth
                end
                
                -- Remove efeitos visuais
                for _, part in ipairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        for _, effect in ipairs(part:GetChildren()) do
                            if effect:IsA("Fire") or effect:IsA("Smoke") or effect:IsA("Sparkles") then
                                effect:Destroy()
                            end
                        end
                    end
                end
            end)
            
            setupGodMode()
            
            -- Reaplica ap√≥s respawn
            LocalPlayer.CharacterAdded:Connect(function()
                task.wait(0.5)
                if godModeEnabled then
                    setupGodMode()
                end
            end)
            
        else
            warn("GodMode desativado")
            if godModeConnection then
                godModeConnection:Disconnect()
                godModeConnection = nil
            end
            if godModeHealthConnection then
                godModeHealthConnection:Disconnect()
                godModeHealthConnection = nil
            end
            if espConnections.godMode then
                for _, conn in pairs(espConnections.godMode) do
                    pcall(function() conn:Disconnect() end)
                end
                espConnections.godMode = nil
            end
        end
    end
})

-- Limpeza quando o jogo fecha
game:BindToClose(function()
    -- Limpa elementos ESP
    for player, folder in pairs(espFolders) do
        if folder then folder:Destroy() end
    end
    for player, conns in pairs(espConnections) do
        for _, conn in pairs(conns) do
            pcall(function() conn:Disconnect() end)
        end
    end
    
    -- Desconecta detec√ß√£o de Brainrot
    if brainrotConnection then
        brainrotConnection:Disconnect()
    end

    -- Remove interface de teleporte a√©reo
    if skyTeleportFrame then
        skyTeleportFrame:Destroy()
    end
    
    -- Desconecta efeito RGB
    if skyButtonRGBConnection then
        skyButtonRGBConnection:Disconnect()
    end
end)
