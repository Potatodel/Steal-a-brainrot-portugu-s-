-- Restri√ß√£o: Funciona apenas nos jogos "Steal a Brainrot" ou no jogo adicional especificado
if game.PlaceId ~= 109983668079237 and game.PlaceId ~= 96342491571673 then
    game:GetService("Players").LocalPlayer:Kick("Por favor, entre em Steal a Brainrot e junte-se ao meu servidor Discord <3")
    return
end

-- Sistema Anti-Kick e Anti-Crash
pcall(function()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local mt = getrawmetatable(game)
    local gameShuttingDown = false

    game:BindToClose(function() gameShuttingDown = true end)
    
    if setreadonly then setreadonly(mt, false) end
    
    local oldNamecall = mt.__namecall
    local oldIndex = mt.__index
    
    -- Impede tentativas de kick via metatable
    mt.__namecall = newcclosure(function(self, ...)
        if gameShuttingDown then return oldNamecall(self, ...) end
        local method = getnamecallmethod()
        if typeof(method) == "string" and method:lower() == "kick" then
            warn("Tentativa de kick bloqueada via __namecall")
            return nil
        end
        return oldNamecall(self, ...)
    end)
    
    -- Bloqueia m√©todos destrutivos como kick, breakjoints, destroy
    mt.__index = newcclosure(function(self, key)
        if gameShuttingDown then return oldIndex(self, key) end
        if typeof(key) == "string" then
            local lowered = key:lower()
            if lowered == "kick" then
                warn("Tentativa de kick bloqueada via __index")
                return function() end
            elseif (lowered == "breakjoints" or lowered == "destroy") then
                warn("M√©todo destrutivo '" .. key .. "' bloqueado via __index")
                return function() end
            end
        end
        return oldIndex(self, key)
    end)
    
    -- Substitui o m√©todo de kick do jogador
    if LocalPlayer then
        local originalKick = LocalPlayer.Kick
        LocalPlayer.Kick = function(self, ...)
            if not gameShuttingDown then
                warn("Tentativa de kick bloqueada via substitui√ß√£o .Kick")
                return nil
            end
            return originalKick(self, ...)
        end
    end
    
    -- Sistema de prote√ß√£o de personagem
    local function protegerPersonagem(char)
        if not char then return end
        
        -- Impede a destrui√ß√£o de partes
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                local originalDestroy = part.Destroy
                part.Destroy = function(self, ...)
                    if not gameShuttingDown then
                        warn("Tentativa de destruir parte do personagem: " .. part.Name)
                        return nil
                    end
                    return originalDestroy(self, ...)
                end
            end
        end
        
        -- Impede ragdoll ao morrer
        local hum = char:FindFirstChildWhichIsA("Humanoid")
        if hum then
            hum.BreakJointsOnDeath = false
        end
    end
    
    -- Aplica prote√ß√£o ao personagem atual e futuros
    if LocalPlayer.Character then
        protegerPersonagem(LocalPlayer.Character)
    end
    
    LocalPlayer.CharacterAdded:Connect(protegerPersonagem)
    
    if setreadonly then setreadonly(mt, true) end
end)

-- Carrega a biblioteca de interface RedzLib
local sucesso, redzlib = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()
end)

if not sucesso then
    warn("Falha ao carregar RedzLib:", redzlib)
    return
end

-- Cria janela principal
local Window = redzlib:MakeWindow({
    Title = "Zeta Hub X Steal a Brainrot",
    SubTitle = "por SILENT",
    SaveFolder = "ZetaHubUniversal"
})

-- Adiciona bot√£o de minimizar
Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://100006760882280", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(0, 6) },
})

-- Servi√ßos do jogo
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

-- Refer√™ncias do jogador
local LocalPlayer = Players.LocalPlayer
local personagem, humanoide
local localMarcado = nil
local localBlocoBase = nil

-- Sistema de detec√ß√£o de Brainrot
local notificacaoBrainrotAtivada = false
local conexaoBrainrot
local brainrotsConhecidos = {}

-- Atualiza refer√™ncias do personagem
local function atualizarReferencias()
    personagem = LocalPlayer.Character
    humanoide = personagem and personagem:FindFirstChildOfClass("Humanoid") or nil
end

-- Configura rastreamento de personagem
LocalPlayer.CharacterAdded:Connect(atualizarReferencias)
LocalPlayer.CharacterRemoving:Connect(function()
    personagem = nil
    humanoide = nil
end)

atualizarReferencias()

-- Sistema de notifica√ß√£o
local function enviarNotificacao(titulo, texto, duracao)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = titulo,
            Text = texto,
            Duration = duracao or 5
        })
    end)
end

-- Aba Discord
local AbaDiscord = Window:MakeTab({ Title = "Discord", Icon = "rbxassetid://84198990394879" })
AbaDiscord:AddSection("Discord")
AbaDiscord:AddDiscordInvite({
    Name = "Zeta Hub",
    Description = "Junte-se √† nossa comunidade",
    Logo = "rbxassetid://88800066762467",
    Invite = "https://discord.gg/bTZtdUjxdB"
})

-- Aba Seguran√ßa
local AbaSeguranca = Window:MakeTab({ Title = "Seguran√ßa", Icon = "rbxassetid://139126357881607" })
AbaSeguranca:AddSection("Ferramentas de Base")

-- Marca a localiza√ß√£o do bloco base
AbaSeguranca:AddButton({
    Title = "Marcar Localiza√ß√£o do Bloco Base",
    Description = "Salva sua posi√ß√£o atual como refer√™ncia",
    Callback = function()
        atualizarReferencias()
        local hrp = personagem and personagem:FindFirstChild("HumanoidRootPart")
        if hrp then
            localBlocoBase = hrp.Position
            print("Localiza√ß√£o do bloco base marcada em:", localBlocoBase)
        else
            warn("HumanoidRootPart n√£o encontrado")
        end
    end
})

-- Teleporta para o bloco base salvo
AbaSeguranca:AddButton({
    Title = "Teleportar para o Bloco Base",
    Description = "Teleporta para a localiza√ß√£o do bloco base salvo",
    Callback = function()
        atualizarReferencias()
        local hrp = personagem and personagem:FindFirstChild("HumanoidRootPart")
        if hrp and localBlocoBase then
            hrp.CFrame = CFrame.new(localBlocoBase)
            print("Teleportado para o bloco base")
        else
            warn("HumanoidRootPart ausente ou localiza√ß√£o n√£o marcada")
        end
    end
})

-- Teleporta para a base atual
AbaSeguranca:AddButton({
    Title = "Teleportar para Sua Base",
    Description = "Teleporta para o PlotBlock da base atual",
    Callback = function()
        atualizarReferencias()
        local hrp = personagem and personagem:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        local modeloLado = nil
        for _, base in pairs(Workspace:GetChildren()) do
            if base:IsA("Model") and base.Name:match("^%d+ Side$") then
                if personagem:IsDescendantOf(base) then
                    modeloLado = base
                    break
                end
            end
        end
        
        if modeloLado then
            local plot = modeloLado:FindFirstChild("PlotBlock", true)
            if plot then
                hrp.CFrame = plot.CFrame + Vector3.new(0, 5, 0)
                print("Teleportado para PlotBlock:", modeloLado.Name)
            else
                warn("PlotBlock n√£o encontrado em", modeloLado.Name)
            end
        else
            warn("Nenhuma base detectada")
        end
    end
})

-- Aba Farming de Subs
local AbaSubFarming = Window:MakeTab({ Title = "Farming de Subs", Icon = "rbxassetid://103306413269388" })
AbaSubFarming:AddSection("Detec√ß√£o de Brainrot")

-- Sistema de detec√ß√£o de Brainrot
local function verificarBrainrots()
    if not notificacaoBrainrotAtivada then return end
    
    -- Procura itens Brainrot no workspace
    for _, item in pairs(Workspace:GetDescendants()) do
        if item:IsA("Model") or item:IsA("Part") then
            local nomeItem = item.Name:lower()
            -- Termos comuns de Brainrot
            if nomeItem:find("brainrot") or nomeItem:find("skibidi") or nomeItem:find("sigma") or 
               nomeItem:find("rizz") or nomeItem:find("ohio") or nomeItem:find("gyatt") or
               nomeItem:find("fanum") or nomeItem:find("tax") then
                
                local idItem = tostring(item)
                if not brainrotsConhecidos[idItem] then
                    brainrotsConhecidos[idItem] = true
                    enviarNotificacao("üß† Brainrot Detectado!", "Novo brainrot encontrado: " .. item.Name, 10)
                    warn("Brainrot detectado:", item.Name, "em", item:GetPivot().Position)
                end
            end
        end
    end
    
    -- Verifica ReplicatedStorage para itens da loja
    pcall(function()
        for _, item in pairs(ReplicatedStorage:GetDescendants()) do
            if item:IsA("Model") or item:IsA("StringValue") or item:IsA("Part") then
                local nomeItem = item.Name:lower()
                if nomeItem:find("brainrot") or nomeItem:find("skibidi") or nomeItem:find("sigma") or 
                   nomeItem:find("rizz") or nomeItem:find("ohio") or nomeItem:find("gyatt") or
                   nomeItem:find("fanum") or nomeItem:find("tax") then
                    
                    local idItem = tostring(item)
                    if not brainrotsConhecidos[idItem] then
                        brainrotsConhecidos[idItem] = true
                        enviarNotificacao("üß† Brainrot Dispon√≠vel!", "Item da loja: " .. item.Name, 10)
                        warn("Brainrot dispon√≠vel na loja:", item.Name)
                    end
                end
            end
        end
    end)
end

-- Alternar notifica√ß√µes de Brainrot
AbaSubFarming:AddToggle({
    Title = "Notifica√ß√µes de Brainrot",
    Description = "Receba alertas quando brainrots aparecerem para compra",
    Default = false,
    Callback = function(estado)
        notificacaoBrainrotAtivada = estado
        if estado then
            warn("Notifica√ß√µes de Brainrot ativadas")
            enviarNotificacao("üß† Detector de Brainrot", "Monitorando brainrots!", 3)
            conexaoBrainrot = RunService.Heartbeat:Connect(verificarBrainrots)
        else
            warn("Notifica√ß√µes de Brainrot desativadas")
            if conexaoBrainrot then
                conexaoBrainrot:Disconnect()
                conexaoBrainrot = nil
            end
            brainrotsConhecidos = {} -- Reseta o cache
        end
    end
})

-- Limpa o cache de Brainrot
AbaSubFarming:AddButton({
    Title = "Limpar Cache de Brainrot",
    Description = "Reseta a lista de brainrots detectados",
    Callback = function()
        brainrotsConhecidos = {}
        enviarNotificacao("üß† Cache Limpo", "Cache de detec√ß√£o resetado", 3)
        warn("Cache de Brainrot limpo")
    end
})

AbaSubFarming:AddSection("Funcionalidades Autom√°ticas")

-- Escaneamento manual de Brainrot
AbaSubFarming:AddButton({
    Title = "Escanear Brainrots Agora",
    Description = "Escaneia manualmente por brainrots dispon√≠veis",
    Callback = function()
        verificarBrainrots()
        enviarNotificacao("üß† Escaneamento Conclu√≠do", "Escaneamento manual conclu√≠do", 3)
    end
})

-- Aba Principal
local AbaPrincipal = Window:MakeTab({ Title = "Principal", Icon = "rbxassetid://106319096400681" })
AbaPrincipal:AddSection("Movimento")

-- Marca localiza√ß√£o para teleporte
AbaPrincipal:AddButton({
    Title = "Marcar Localiza√ß√£o",
    Description = "Salva sua posi√ß√£o atual para teleporte",
    Callback = function()
        atualizarReferencias()
        local hrp = personagem and personagem:FindFirstChild("HumanoidRootPart")
        if hrp then
            localMarcado = hrp.Position
            print("Localiza√ß√£o marcada em:", localMarcado)
        else
            warn("HumanoidRootPart n√£o encontrado")
        end
    end
})

-- Teleporte suave com imunidade a dano
AbaPrincipal:AddButton({
    Title = "Teleportar Suavemente para Local Marcado",
    Description = "Teleporta com passagem por paredes e imunidade a dano",
    Callback = function()
        atualizarReferencias()
        local hrp = personagem and personagem:FindFirstChild("HumanoidRootPart")
        local humanoide = personagem and personagem:FindFirstChildOfClass("Humanoid")
        if not hrp or not humanoide or not localMarcado then return end

        local vidaOriginal = humanoide.Health
        local imune = true
        
        -- Prote√ß√£o de vida durante o teleporte
        local conexaoVida = humanoide:GetPropertyChangedSignal("Health"):Connect(function()
            if imune and humanoide.Health < vidaOriginal then
                humanoide.Health = vidaOriginal
            end
        end)
        
        -- Torna as partes do personagem transparentes
        local partesAfetadas = {}
        for _, part in ipairs(personagem:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                table.insert(partesAfetadas, { part = part, t = part.Transparency, c = part.CanCollide })
                part.Transparency = 1
                part.CanCollide = false
            elseif part:IsA("Decal") then
                part.Transparency = 1
            end
        end
        
        -- Remove colis√£o com paredes
        local paredesRemovidas = {}
        for _, obj in ipairs(Workspace:GetDescendants()) do
            if obj:IsA("BasePart") and obj.Name:lower():find("wall") then
                table.insert(paredesRemovidas, { part = obj, t = obj.Transparency, c = obj.CanCollide })
                obj.Transparency = 1
                obj.CanCollide = false
            end
        end
        
        -- Cria e executa anima√ß√£o de teleporte
        local dist = (hrp.Position - localMarcado).Magnitude
        local infoTween = TweenInfo.new(dist / 40, Enum.EasingStyle.Linear)
        local tween = TweenService:Create(hrp, infoTween, { CFrame = CFrame.new(localMarcado + Vector3.new(0, 3, 0)) })
        
        tween:Play()
        tween.Completed:Connect(function()
            imune = false
            if conexaoVida then conexaoVida:Disconnect() end
            
            -- Restaura as partes do personagem
            for _, data in ipairs(partesAfetadas) do
                if data.part and data.part.Parent then
                    data.part.Transparency = data.t
                    data.part.CanCollide = data.c
                end
            end
            
            -- Restaura as paredes
            for _, data in ipairs(paredesRemovidas) do
                if data.part and data.part.Parent then
                    data.part.Transparency = data.t
                    data.part.CanCollide = data.c
                end
            end
        end)
    end
})

AbaPrincipal:AddSection("Teleporte para o C√©u")

-- Interface de Teleporte para o C√©u
local quadroTeleporteCeu = nil
local botaoCeu = nil
local conexaoRGBBotaoCeu = nil

AbaPrincipal:AddButton({
    Title = "Painel do C√©u",
    Description = "Alterna a interface de teleporte para o c√©u",
    Callback = function()
        if quadroTeleporteCeu then
            quadroTeleporteCeu.Visible = not quadroTeleporteCeu.Visible
        else
            -- Cria painel de teleporte para o c√©u
            quadroTeleporteCeu = Instance.new("Frame")
            quadroTeleporteCeu.Name = "QuadroTeleporteCeu"
            quadroTeleporteCeu.Size = UDim2.new(0, 150, 0, 60)
            quadroTeleporteCeu.Position = UDim2.new(0.5, -75, 0.5, -30)
            quadroTeleporteCeu.AnchorPoint = Vector2.new(0.5, 0.5)
            quadroTeleporteCeu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            quadroTeleporteCeu.BackgroundTransparency = 0.7
            quadroTeleporteCeu.BorderSizePixel = 0
            quadroTeleporteCeu.Visible = true
            quadroTeleporteCeu.Active = true
            quadroTeleporteCeu.Selectable = true
            quadroTeleporteCeu.ZIndex = 10
            quadroTeleporteCeu.Parent = game:GetService("CoreGui"):FindFirstChild("RobloxGui") or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
            
            -- Bordas arredondadas
            local canto = Instance.new("UICorner")
            canto.CornerRadius = UDim.new(0, 8)
            canto.Parent = quadroTeleporteCeu
            
            -- Cria bot√£o de teleporte
            botaoCeu = Instance.new("TextButton")
            botaoCeu.Name = "BotaoCeu"
            botaoCeu.Size = UDim2.new(0.9, 0, 0.8, 0)
            botaoCeu.Position = UDim2.new(0.05, 0, 0.1, 0)
            botaoCeu.BackgroundTransparency = 1
            botaoCeu.Text = "SUBIR"
            botaoCeu.TextSize = 18
            botaoCeu.Font = Enum.Font.GothamBold
            botaoCeu.TextColor3 = Color3.new(1, 1, 1)
            botaoCeu.TextStrokeTransparency = 0.5
            botaoCeu.TextStrokeColor3 = Color3.new(0, 0, 0)
            botaoCeu.ZIndex = 11
            botaoCeu.Parent = quadroTeleporteCeu
            
            -- Torna o painel arrast√°vel
            local arrastando
            local entradaArrastar
            local inicioArrastar
            local posicaoInicial
            
            local function atualizarEntrada(entrada)
                local delta = entrada.Position - inicioArrastar
                local novaPos = UDim2.new(posicaoInicial.X.Scale, posicaoInicial.X.Offset + delta.X, posicaoInicial.Y.Scale, posicaoInicial.Y.Offset + delta.Y)
                quadroTeleporteCeu.Position = novaPos
            end
            
            quadroTeleporteCeu.InputBegan:Connect(function(entrada)
                if entrada.UserInputType == Enum.UserInputType.MouseButton1 then
                    arrastando = true
                    inicioArrastar = entrada.Position
                    posicaoInicial = quadroTeleporteCeu.Position
                    
                    entrada.Changed:Connect(function()
                        if entrada.UserInputState == Enum.UserInputState.End then
                            arrastando = false
                        end
                    end)
                end
            end)
            
            quadroTeleporteCeu.InputChanged:Connect(function(entrada)
                if entrada.UserInputType == Enum.UserInputType.MouseMovement then
                    entradaArrastar = entrada
                end
            end)
            
            UserInputService.InputChanged:Connect(function(entrada)
                if entrada == entradaArrastar and arrastando then
                    atualizarEntrada(entrada)
                end
            end)
            
            -- Funcionalidade de teleporte
            botaoCeu.MouseButton1Click:Connect(function()
                atualizarReferencias()
                local hrp = personagem and personagem:FindFirstChild("HumanoidRootPart")
                if hrp then
                    if botaoCeu.Text == "SUBIR" then
                        hrp.CFrame = CFrame.new(hrp.Position.X, 171, hrp.Position.Z)
                        botaoCeu.Text = "DESCER"
                    else
                        hrp.CFrame = CFrame.new(hrp.Position.X, -7, hrp.Position.Z)
                        botaoCeu.Text = "SUBIR"
                    end
                end
            end)
            
            -- Efeito RGB no texto
            if conexaoRGBBotaoCeu then
                conexaoRGBBotaoCeu:Disconnect()
            end
            
            conexaoRGBBotaoCeu = RunService.RenderStepped:Connect(function()
                local hue = tick() % 5 / 5
                local cor = Color3.fromHSV(hue, 1, 1)
                botaoCeu.TextColor3 = cor
            end)
            
            -- Bot√£o de fechar
            local botaoFechar = Instance.new("TextButton")
            botaoFechar.Name = "BotaoFechar"
            botaoFechar.Size = UDim2.new(0, 20, 0, 20)
            botaoFechar.Position = UDim2.new(1, -25, 0, 5)
            botaoFechar.Text = "X"
            botaoFechar.TextColor3 = Color3.new(1, 1, 1)
            botaoFechar.TextSize = 14
            botaoFechar.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
            botaoFechar.BackgroundTransparency = 0.7
            botaoFechar.ZIndex = 11
            botaoFechar.Parent = quadroTeleporteCeu
            
            local cantoFechar = Instance.new("UICorner")
            cantoFechar.CornerRadius = UDim.new(0, 10)
            cantoFechar.Parent = botaoFechar
            
            botaoFechar.MouseButton1Click:Connect(function()
                quadroTeleporteCeu.Visible = false
            end)
        end
    end
})

-- Sistema Anti-Ragdoll
local antiRagdollAtivado = false
local conexaoAntiRagdoll

AbaPrincipal:AddSection("Anti-Ragdoll")
AbaPrincipal:AddToggle({
    Title = "Anti-Ragdoll",
    Description = "Impede que seu personagem se torne um ragdoll",
    Default = false,
    Callback = function(estado)
        antiRagdollAtivado = estado
        if estado then
            warn("Anti-Ragdoll ativado")
            conexaoAntiRagdoll = RunService.Heartbeat:Connect(function()
                atualizarReferencias()
                if not personagem then return end
                
                -- Remove restri√ß√µes de membros
                for _, membro in ipairs({"Bra√ßo Esquerdo", "Bra√ßo Direito", "Perna Esquerda", "Perna Direita", "Cabe√ßa", "Torso", "Torso Superior", "Torso Inferior"}) do
                    local parte = personagem:FindFirstChild(membro)
                    if parte then
                        for _, c in ipairs(parte:GetChildren()) do
                            if c:IsA("BallSocketConstraint") or c:IsA("HingeConstraint") then
                                c:Destroy()
                            end
                        end
                    end
                end
                
                -- Mant√©m as juntas ativas
                for _, junta in ipairs(personagem:GetDescendants()) do
                    if junta:IsA("Motor6D") then
                        junta.Enabled = true
                    end
                end
            end)
        else
            warn("Anti-Ragdoll desativado")
            if conexaoAntiRagdoll then
                conexaoAntiRagdoll:Disconnect()
                conexaoAntiRagdoll = nil
            end
        end
    end
})

-- Aba Fun√ß√µes
local AbaFuncoes = Window:MakeTab({ Title = "Fun√ß√µes", Icon = "rbxassetid://103306413269388" })

-- Sistema de Pulo Infinito
local puloInfinitoAtivado = false
local conexaoPulo

local function lidarComPulo()
    atualizarReferencias()
    if humanoide and humanoide:GetState() ~= Enum.HumanoidStateType.Dead then
        humanoide:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end

AbaFuncoes:AddToggle({
    Title = "Pulo Infinito",
    Description = "Permite pular infinitamente no ar",
    Default = false,
    Callback = function(estado)
        puloInfinitoAtivado = estado
        if estado then
            warn("Pulo Infinito ativado")
            if conexaoPulo then conexaoPulo:Disconnect() end
            conexaoPulo = UserInputService.JumpRequest:Connect(lidarComPulo)
            
            -- Reconecta ap√≥s respawn
            LocalPlayer.CharacterAdded:Connect(function()
                atualizarReferencias()
                if puloInfinitoAtivado then
                    if conexaoPulo then conexaoPulo:Disconnect() end
                    conexaoPulo = UserInputService.JumpRequest:Connect(lidarComPulo)
                end
            end)
        else
            warn("Pulo Infinito desativado")
            if conexaoPulo then
                conexaoPulo:Disconnect()
                conexaoPulo = nil
            end
        end
    end
})

-- Sistema NoClip
local noClipAtivado = false
local conexaoNoClip

local function loopNoClip()
    atualizarReferencias()
    if not personagem then return end
    for _, parte in ipairs(personagem:GetDescendants()) do
        if parte:IsA("BasePart") then
            parte.CanCollide = false
        end
    end
end

AbaFuncoes:AddToggle({
    Title = "NoClip",
    Description = "Permite atravessar paredes",
    Default = false,
    Callback = function(estado)
        noClipAtivado = estado
        if estado then
            warn("NoClip ativado")
            conexaoNoClip = RunService.Stepped:Connect(loopNoClip)
        else
            warn("NoClip desativado")
            if conexaoNoClip then
                conexaoNoClip:Disconnect()
                conexaoNoClip = nil
            end
        end
    end
})

-- Sistema ESP (Destaque de Jogadores)
local espAtivado = false
local pastasESP = {}
local conexoesESP = {}

local function criarESP(jogador)
    if jogador == Players.LocalPlayer then return end

    local function configurar()
        if not jogador.Character or not jogador.Character:FindFirstChild("HumanoidRootPart") then return end
        
        -- Limpa ESP existente
        if pastasESP[jogador] then
            pastasESP[jogador]:Destroy()
        end
        if conexoesESP[jogador] then
            for _, conn in pairs(conexoesESP[jogador]) do
                pcall(function() conn:Disconnect() end)
            end
            conexoesESP[jogador] = {}
        end
        
        -- Cria pasta ESP
        local pasta = Instance.new("Folder")
        pasta.Name = "ESP" .. jogador.Name
        pasta.Parent = Workspace
        pastasESP[jogador] = pasta
        
        -- Cria efeito de destaque
        local destaque = Instance.new("Highlight")
        destaque.Adornee = jogador.Character
        destaque.FillTransparency = 0.7
        destaque.OutlineTransparency = 0
        destaque.Parent = pasta
        
        -- Cria etiqueta de nome
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = jogador.Character:FindFirstChild("HumanoidRootPart")
        billboard.Size = UDim2.new(0, 200, 0, 40)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true
        billboard.MaxDistance = 1000
        billboard.Parent = pasta
        
        local textoLabel = Instance.new("TextLabel")
        textoLabel.Size = UDim2.new(1, 0, 1, 0)
        textoLabel.BackgroundTransparency = 1
        textoLabel.TextStrokeTransparency = 0.5
        textoLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        textoLabel.TextSize = 14
        textoLabel.Font = Enum.Font.GothamBold
        textoLabel.Text = jogador.Name
        textoLabel.TextColor3 = Color3.new(1, 1, 1)
        textoLabel.Parent = billboard
        
        -- Adiciona exibi√ß√£o de vida
        local humanoide = jogador.Character:FindFirstChildOfClass("Humanoid")
        if humanoide then
            local function atualizarTexto()
                textoLabel.Text = string.format("%s [%d/%d]", jogador.Name, math.floor(humanoide.Health), math.floor(humanoide.MaxHealth))
            end
            atualizarTexto()
            
            if not conexoesESP[jogador] then
                conexoesESP[jogador] = {}
            end
            conexoesESP[jogador].conVida = humanoide:GetPropertyChangedSignal("Health"):Connect(atualizarTexto)
        end
        
        -- Adiciona efeito RGB
        if not conexoesESP[jogador] then
            conexoesESP[jogador] = {}
        end
        conexoesESP[jogador].conRender = RunService.RenderStepped:Connect(function()
            local hue = tick() % 5 / 5
            local cor = Color3.fromHSV(hue, 1, 1)
            textoLabel.TextColor3 = cor
            destaque.FillColor = cor
            destaque.OutlineColor = cor
        end)
    end
    
    configurar()
    
    -- Persiste ap√≥s respawns
    if not conexoesESP[jogador] then
        conexoesESP[jogador] = {}
    end
    conexoesESP[jogador].charAdicionado = jogador.CharacterAdded:Connect(function()
        task.wait(0.5)
        if espAtivado then
            configurar()
        end
    end)
end

-- Atualiza todos os elementos ESP
local function atualizarESP()
    for jogador, pasta in pairs(pastasESP) do
        if pasta then pasta:Destroy() end
    end
    for jogador, conns in pairs(conexoesESP) do
        for _, conn in pairs(conns) do
            pcall(function() conn:Disconnect() end)
        end
    end
    pastasESP = {}
    conexoesESP = {}

    if espAtivado then
        for _, jogador in ipairs(Players:GetPlayers()) do
            if jogador ~= Players.LocalPlayer then
                criarESP(jogador)
            end
        end
    end
end

-- ESP permanece ativo ap√≥s a morte do jogador
local conexaoJogadorAdicionadoESP
local conexaoRespawnJogadorLocalESP

AbaFuncoes:AddToggle({
    Title = "ESP de Jogadores",
    Description = "Destaca jogadores com RGB + nome e vida (Persistente)",
    Default = false,
    Callback = function(estado)
        espAtivado = estado
        if estado then
            warn("ESP ativado")
            atualizarESP()
            
            -- Lida com novos jogadores
            if conexaoJogadorAdicionadoESP then conexaoJogadorAdicionadoESP:Disconnect() end
            conexaoJogadorAdicionadoESP = Players.PlayerAdded:Connect(function(jogador)
                jogador.CharacterAdded:Connect(function()
                    task.wait(0.5)
                    if espAtivado then
                        criarESP(jogador)
                    end
                end)
            end)
            
            -- Lida com respawn do jogador local
            if conexaoRespawnJogadorLocalESP then conexaoRespawnJogadorLocalESP:Disconnect() end
            conexaoRespawnJogadorLocalESP = LocalPlayer.CharacterAdded:Connect(function()
                task.wait(1)
                if espAtivado then
                    atualizarESP()
                end
            end)
        else
            warn("ESP desativado")
            atualizarESP()
            if conexaoJogadorAdicionadoESP then conexaoJogadorAdicionadoESP:Disconnect() end
            if conexaoRespawnJogadorLocalESP then conexaoRespawnJogadorLocalESP:Disconnect() end
        end
    end
})

-- Sistema Avan√ßado de GodMode
local godModeAtivado = false
local conexaoGodMode
local conexaoVidaGodMode

AbaFuncoes:AddToggle({
    Title = "GodMode",
    Description = "GodMode avan√ßado com m√∫ltiplas camadas de prote√ß√£o",
    Default = false,
    Callback = function(estado)
        godModeAtivado = estado
        if estado then
            warn("GodMode ativado")
            
            local function configurarGodMode()
                atualizarReferencias()
                if not humanoide then return end
                
                local vidaMaxOriginal = humanoide.MaxHealth
                
                -- Prote√ß√£o de vida
                if conexaoVidaGodMode then conexaoVidaGodMode:Disconnect() end
                conexaoVidaGodMode = humanoide:GetPropertyChangedSignal("Health"):Connect(function()
                    if godModeAtivado and humanoide.Health < vidaMaxOriginal then
                        humanoide.Health = vidaMaxOriginal
                    end
                end)
                
                -- Impede estado de plataforma
                local conexaoEstado = humanoide:GetPropertyChangedSignal("PlatformStand"):Connect(function()
                    if godModeAtivado then
                        humanoide.PlatformStand = false
                    end
                end)
                
                -- Impede morte
                local conexaoMorte = humanoide.Died:Connect(function()
                    if godModeAtivado then
                        task.wait(0.1)
                        if humanoide and humanoide.Parent then
                            humanoide:ChangeState(Enum.HumanoidStateType.Running)
                            humanoide.Health = vidaMaxOriginal
                        end
                    end
                end)
                
                if not conexoesESP.godMode then
                    conexoesESP.godMode = {}
                end
                conexoesESP.godMode.vida = conexaoVidaGodMode
                conexoesESP.godMode.estado = conexaoEstado
                conexoesESP.godMode.morte = conexaoMorte
            end
            
            -- Loop principal do GodMode
            conexaoGodMode = RunService.Heartbeat:Connect(function()
                atualizarReferencias()
                if not personagem or not humanoide then return end
                
                -- Mant√©m a vida cheia
                if humanoide.Health < humanoide.MaxHealth then
                    humanoide.Health = humanoide.MaxHealth
                end
                
                -- Impede estado de morte
                if humanoide:GetState() == Enum.HumanoidStateType.Dead then
                    humanoide:ChangeState(Enum.HumanoidStateType.Running)
                    humanoide.Health = humanoide.MaxHealth
                end
                
                -- Remove efeitos visuais
                for _, parte in ipairs(personagem:GetChildren()) do
                    if parte:IsA("BasePart") then
                        for _, efeito in ipairs(parte:GetChildren()) do
                            if efeito:IsA("Fire") or efeito:IsA("Smoke") or efeito:IsA("Sparkles") then
                                efeito:Destroy()
                            end
                        end
                    end
                end
            end)
            
            configurarGodMode()
            
            -- Reaplica ap√≥s respawn
            LocalPlayer.CharacterAdded:Connect(function()
                task.wait(0.5)
                if godModeAtivado then
                    configurarGodMode()
                end
            end)
            
        else
            warn("GodMode desativado")
            if conexaoGodMode then
                conexaoGodMode:Disconnect()
                conexaoGodMode = nil
            end
            if conexaoVidaGodMode then
                conexaoVidaGodMode:Disconnect()
                conexaoVidaGodMode = nil
            end
            if conexoesESP.godMode then
                for _, conn in pairs(conexoesESP.godMode) do
                    pcall(function() conn:Disconnect() end)
                end
                conexoesESP.godMode = nil
            end
        end
    end
})

-- Limpeza ao fechar o jogo
game:BindToClose(function()
    -- Limpa elementos ESP
    for jogador, pasta in pairs(pastasESP) do
        if pasta then pasta:Destroy() end
    end
    for jogador, conns in pairs(conexoesESP) do
        for _, conn in pairs(conns) do
            pcall(function() conn:Disconnect() end)
        end
    end
    
    -- Desconecta detec√ß√£o de Brainrot
    if conexaoBrainrot then
        conexaoBrainrot:Disconnect()
    end

    -- Remove interface de teleporte para o c√©u
    if quadroTeleporteCeu then
        quadroTeleporteCeu:Destroy()
    end
    
    -- Desconecta efeito RGB
    if conexaoRGBBotaoCeu then
        conexaoRGBBotaoCeu:Disconnect()
    end
end)
